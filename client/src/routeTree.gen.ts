/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthenticatedUnitsIndexImport } from './routes/_authenticated/units/index'
import { Route as AuthenticatedTenantsIndexImport } from './routes/_authenticated/tenants/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedReportsIndexImport } from './routes/_authenticated/reports/index'
import { Route as AuthenticatedMaintenanceIndexImport } from './routes/_authenticated/maintenance/index'
import { Route as AuthenticatedLeasesIndexImport } from './routes/_authenticated/leases/index'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedCalendarIndexImport } from './routes/_authenticated/calendar/index'
import { Route as AuthenticatedTenantsTenantIdImport } from './routes/_authenticated/tenants/$tenantId'
import { Route as AuthenticatedSettingsRolesPermissionImport } from './routes/_authenticated/settings/roles-permission'
import { Route as AuthenticatedFinancesPaymentsImport } from './routes/_authenticated/finances/payments'
import { Route as AuthenticatedFinancesExpensesImport } from './routes/_authenticated/finances/expenses'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUnitsIndexRoute = AuthenticatedUnitsIndexImport.update({
  id: '/units/',
  path: '/units/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTenantsIndexRoute = AuthenticatedTenantsIndexImport.update({
  id: '/tenants/',
  path: '/tenants/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedReportsIndexRoute = AuthenticatedReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMaintenanceIndexRoute =
  AuthenticatedMaintenanceIndexImport.update({
    id: '/maintenance/',
    path: '/maintenance/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedLeasesIndexRoute = AuthenticatedLeasesIndexImport.update({
  id: '/leases/',
  path: '/leases/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedCalendarIndexRoute = AuthenticatedCalendarIndexImport.update(
  {
    id: '/calendar/',
    path: '/calendar/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedTenantsTenantIdRoute =
  AuthenticatedTenantsTenantIdImport.update({
    id: '/tenants/$tenantId',
    path: '/tenants/$tenantId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsRolesPermissionRoute =
  AuthenticatedSettingsRolesPermissionImport.update({
    id: '/settings/roles-permission',
    path: '/settings/roles-permission',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedFinancesPaymentsRoute =
  AuthenticatedFinancesPaymentsImport.update({
    id: '/finances/payments',
    path: '/finances/payments',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedFinancesExpensesRoute =
  AuthenticatedFinancesExpensesImport.update({
    id: '/finances/expenses',
    path: '/finances/expenses',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/finances/expenses': {
      id: '/_authenticated/finances/expenses'
      path: '/finances/expenses'
      fullPath: '/finances/expenses'
      preLoaderRoute: typeof AuthenticatedFinancesExpensesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/finances/payments': {
      id: '/_authenticated/finances/payments'
      path: '/finances/payments'
      fullPath: '/finances/payments'
      preLoaderRoute: typeof AuthenticatedFinancesPaymentsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/roles-permission': {
      id: '/_authenticated/settings/roles-permission'
      path: '/settings/roles-permission'
      fullPath: '/settings/roles-permission'
      preLoaderRoute: typeof AuthenticatedSettingsRolesPermissionImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tenants/$tenantId': {
      id: '/_authenticated/tenants/$tenantId'
      path: '/tenants/$tenantId'
      fullPath: '/tenants/$tenantId'
      preLoaderRoute: typeof AuthenticatedTenantsTenantIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/calendar/': {
      id: '/_authenticated/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof AuthenticatedCalendarIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/leases/': {
      id: '/_authenticated/leases/'
      path: '/leases'
      fullPath: '/leases'
      preLoaderRoute: typeof AuthenticatedLeasesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/maintenance/': {
      id: '/_authenticated/maintenance/'
      path: '/maintenance'
      fullPath: '/maintenance'
      preLoaderRoute: typeof AuthenticatedMaintenanceIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/reports/': {
      id: '/_authenticated/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthenticatedReportsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tenants/': {
      id: '/_authenticated/tenants/'
      path: '/tenants'
      fullPath: '/tenants'
      preLoaderRoute: typeof AuthenticatedTenantsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/units/': {
      id: '/_authenticated/units/'
      path: '/units'
      fullPath: '/units'
      preLoaderRoute: typeof AuthenticatedUnitsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedFinancesExpensesRoute: typeof AuthenticatedFinancesExpensesRoute
  AuthenticatedFinancesPaymentsRoute: typeof AuthenticatedFinancesPaymentsRoute
  AuthenticatedSettingsRolesPermissionRoute: typeof AuthenticatedSettingsRolesPermissionRoute
  AuthenticatedTenantsTenantIdRoute: typeof AuthenticatedTenantsTenantIdRoute
  AuthenticatedCalendarIndexRoute: typeof AuthenticatedCalendarIndexRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedLeasesIndexRoute: typeof AuthenticatedLeasesIndexRoute
  AuthenticatedMaintenanceIndexRoute: typeof AuthenticatedMaintenanceIndexRoute
  AuthenticatedReportsIndexRoute: typeof AuthenticatedReportsIndexRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
  AuthenticatedTenantsIndexRoute: typeof AuthenticatedTenantsIndexRoute
  AuthenticatedUnitsIndexRoute: typeof AuthenticatedUnitsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedFinancesExpensesRoute: AuthenticatedFinancesExpensesRoute,
  AuthenticatedFinancesPaymentsRoute: AuthenticatedFinancesPaymentsRoute,
  AuthenticatedSettingsRolesPermissionRoute:
    AuthenticatedSettingsRolesPermissionRoute,
  AuthenticatedTenantsTenantIdRoute: AuthenticatedTenantsTenantIdRoute,
  AuthenticatedCalendarIndexRoute: AuthenticatedCalendarIndexRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedLeasesIndexRoute: AuthenticatedLeasesIndexRoute,
  AuthenticatedMaintenanceIndexRoute: AuthenticatedMaintenanceIndexRoute,
  AuthenticatedReportsIndexRoute: AuthenticatedReportsIndexRoute,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  AuthenticatedTenantsIndexRoute: AuthenticatedTenantsIndexRoute,
  AuthenticatedUnitsIndexRoute: AuthenticatedUnitsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/finances/expenses': typeof AuthenticatedFinancesExpensesRoute
  '/finances/payments': typeof AuthenticatedFinancesPaymentsRoute
  '/settings/roles-permission': typeof AuthenticatedSettingsRolesPermissionRoute
  '/tenants/$tenantId': typeof AuthenticatedTenantsTenantIdRoute
  '/calendar': typeof AuthenticatedCalendarIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/leases': typeof AuthenticatedLeasesIndexRoute
  '/maintenance': typeof AuthenticatedMaintenanceIndexRoute
  '/reports': typeof AuthenticatedReportsIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tenants': typeof AuthenticatedTenantsIndexRoute
  '/units': typeof AuthenticatedUnitsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/finances/expenses': typeof AuthenticatedFinancesExpensesRoute
  '/finances/payments': typeof AuthenticatedFinancesPaymentsRoute
  '/settings/roles-permission': typeof AuthenticatedSettingsRolesPermissionRoute
  '/tenants/$tenantId': typeof AuthenticatedTenantsTenantIdRoute
  '/calendar': typeof AuthenticatedCalendarIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/leases': typeof AuthenticatedLeasesIndexRoute
  '/maintenance': typeof AuthenticatedMaintenanceIndexRoute
  '/reports': typeof AuthenticatedReportsIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tenants': typeof AuthenticatedTenantsIndexRoute
  '/units': typeof AuthenticatedUnitsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_authenticated/finances/expenses': typeof AuthenticatedFinancesExpensesRoute
  '/_authenticated/finances/payments': typeof AuthenticatedFinancesPaymentsRoute
  '/_authenticated/settings/roles-permission': typeof AuthenticatedSettingsRolesPermissionRoute
  '/_authenticated/tenants/$tenantId': typeof AuthenticatedTenantsTenantIdRoute
  '/_authenticated/calendar/': typeof AuthenticatedCalendarIndexRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/leases/': typeof AuthenticatedLeasesIndexRoute
  '/_authenticated/maintenance/': typeof AuthenticatedMaintenanceIndexRoute
  '/_authenticated/reports/': typeof AuthenticatedReportsIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tenants/': typeof AuthenticatedTenantsIndexRoute
  '/_authenticated/units/': typeof AuthenticatedUnitsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/finances/expenses'
    | '/finances/payments'
    | '/settings/roles-permission'
    | '/tenants/$tenantId'
    | '/calendar'
    | '/dashboard'
    | '/leases'
    | '/maintenance'
    | '/reports'
    | '/settings'
    | '/tenants'
    | '/units'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/finances/expenses'
    | '/finances/payments'
    | '/settings/roles-permission'
    | '/tenants/$tenantId'
    | '/calendar'
    | '/dashboard'
    | '/leases'
    | '/maintenance'
    | '/reports'
    | '/settings'
    | '/tenants'
    | '/units'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/_authenticated/finances/expenses'
    | '/_authenticated/finances/payments'
    | '/_authenticated/settings/roles-permission'
    | '/_authenticated/tenants/$tenantId'
    | '/_authenticated/calendar/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/leases/'
    | '/_authenticated/maintenance/'
    | '/_authenticated/reports/'
    | '/_authenticated/settings/'
    | '/_authenticated/tenants/'
    | '/_authenticated/units/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/finances/expenses",
        "/_authenticated/finances/payments",
        "/_authenticated/settings/roles-permission",
        "/_authenticated/tenants/$tenantId",
        "/_authenticated/calendar/",
        "/_authenticated/dashboard/",
        "/_authenticated/leases/",
        "/_authenticated/maintenance/",
        "/_authenticated/reports/",
        "/_authenticated/settings/",
        "/_authenticated/tenants/",
        "/_authenticated/units/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/_authenticated/finances/expenses": {
      "filePath": "_authenticated/finances/expenses.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/finances/payments": {
      "filePath": "_authenticated/finances/payments.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/roles-permission": {
      "filePath": "_authenticated/settings/roles-permission.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tenants/$tenantId": {
      "filePath": "_authenticated/tenants/$tenantId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/calendar/": {
      "filePath": "_authenticated/calendar/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/leases/": {
      "filePath": "_authenticated/leases/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/maintenance/": {
      "filePath": "_authenticated/maintenance/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reports/": {
      "filePath": "_authenticated/reports/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tenants/": {
      "filePath": "_authenticated/tenants/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/units/": {
      "filePath": "_authenticated/units/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
